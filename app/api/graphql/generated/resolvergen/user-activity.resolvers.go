package resolvergen

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.27

import (
	"context"
	"fmt"
	"gogql/app/api/graphql/generated/graph"
	"gogql/app/models/dbmodels"
)

// UserActivities is the resolver for the userActivities field.
func (r *queryResolver) UserActivities(ctx context.Context, search graph.SearchFilter, userID *int64) (*graph.UserActivitiesResult, error) {
	panic(fmt.Errorf("not implemented: UserActivities - userActivities"))
}

// UserActivity is the resolver for the userActivity field.
func (r *queryResolver) UserActivity(ctx context.Context, id int64) (*dbmodels.UserActivity, error) {
	panic(fmt.Errorf("not implemented: UserActivity - userActivity"))
}

// User is the resolver for the user field.
func (r *userActivityResolver) User(ctx context.Context, obj *dbmodels.UserActivity) (*dbmodels.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Organization is the resolver for the organization field.
func (r *userActivityResolver) Organization(ctx context.Context, obj *dbmodels.UserActivity) (*dbmodels.Organization, error) {
	panic(fmt.Errorf("not implemented: Organization - organization"))
}

// UserActivity returns graph.UserActivityResolver implementation.
func (r *Resolver) UserActivity() graph.UserActivityResolver { return &userActivityResolver{r} }

type userActivityResolver struct{ *Resolver }
